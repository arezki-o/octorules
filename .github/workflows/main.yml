name: Deploy
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0  
      - name: cd workspace
        run: cd ${{ github.workspace }} && git init    
      - name: Get modified files
        id: get_modified_files
        run: |
          echo "Retrieving modified files..."
          get_modified_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})
          if [[ -z "$get_modified_files" ]]; then
            echo "No modified files found."
          else
            echo "Modified files:"
            echo "${get_modified_files}"
          fi
        shell: bash
      - name: Set output
        if: steps.get_modified_files.outputs.modified-files != ''
        run: echo "::set-output name=modified_files::${{ steps.get_modified_files.outputs.modified-files }}" 
      - name: Print commit SHA
        run: echo "${{ github.sha }}"
      - name: echo pwd 
        run: pwd 
      - name: Filter result files
        run: |
          get-modified-files=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .css$ | xargs)
          echo "$get-modified-files"
          if echo "$get-modified-files" | grep -q result; then
            echo "$get-modified-files" | tr " " "\n" | grep result > resultrules
          fi
          if [ -e resultrules ]; then
            cat resultrules
          fi
        shell: bash
      - name: Sync code
        run: |
          if [ ! -d /home/ubuntu/fromsync/"$(date +"%d-%m-%Y")" ]; then
            mkdir /home/ubuntu/fromsync/"$(date +"%d-%m-%Y")"
          fi
          cp -r ${{ github.workspace }} /home/ubuntu/fromsync/"$(date +"%d-%m-%Y")"
          cd /home/ubuntu/fromsync/"$(date +"%d-%m-%Y")"/octorules
          cp ../../deprecated.sh .
          if [ -e deprecated ]; then
            rm deprecated
          fi
          for rule in ./rules/_deprecated/*toml; do
            grep -m 1 "^name =" $rule | awk -F\" '{print $2}' >> deprecated
          done
          bash deprecated.sh deprecated
          cp ../../handler.sh .
          bash handler.sh ${{ github.event.inputs.input }}
